{"version":3,"sources":["ListboxOptions.js","Listbox.js","ListboxExample.js","demo-start/ListboxOptions.js","demo-start/Listbox.js","demo-start/ListboxExample.js","AcceptanceCriteria.js","App.js","index.js"],"names":["ListboxOptions","items","selectedItem","setSelectedItem","setIsOpen","triggerButtonRef","listboxRef","useRef","useEffect","current","focus","findIndexOfItem","item","indexOf","useState","focusedItemIndex","setFocusedItemIndex","scrollItemIntoView","itemIndex","itemElement","document","getElementById","id","listboxElement","scrollHeight","clientHeight","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","className","tabIndex","role","ref","aria-labelledby","aria-activedescendant","onKeyDown","e","key","preventDefault","newFocusedItemIndexAfterArrowUp","length","newFocusedItemIndexAfterArrowDown","onBlur","map","index","onClick","handleItemClick","aria-selected","label","Listbox","isOpen","aria-haspopup","aria-expanded","ListboxExample","ListboxExampleStartingPoint","AcceptanceCriteria","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6c0c0778.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nexport const ListboxOptions = ({\n  items,\n  selectedItem,\n  setSelectedItem,\n  setIsOpen,\n  triggerButtonRef,\n}) => {\n  const listboxRef = useRef(null);\n\n  useEffect(() => {\n    listboxRef.current.focus();\n  }, []);\n\n  const findIndexOfItem = item => {\n    return items.indexOf(item);\n  };\n\n  const [focusedItemIndex, setFocusedItemIndex] = useState(\n    findIndexOfItem(selectedItem) > -1 ? findIndexOfItem(selectedItem) : 0\n  );\n\n  const handleItemClick = (e, item) => {\n    e.preventDefault();\n    setSelectedItem(item);\n    setFocusedItemIndex(findIndexOfItem(item));\n    setIsOpen(false);\n    triggerButtonRef.current.focus();\n  };\n\n  const scrollItemIntoView = itemIndex => {\n    const itemElement = document.getElementById(items[itemIndex].id);\n    const listboxElement = listboxRef.current;\n\n    if (listboxElement.scrollHeight > listboxElement.clientHeight) {\n      let scrollBottom = listboxElement.clientHeight + listboxElement.scrollTop;\n      let elementBottom = itemElement.offsetTop + itemElement.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxElement.scrollTop = elementBottom - listboxElement.clientHeight;\n      } else if (itemElement.offsetTop < listboxElement.scrollTop) {\n        listboxElement.scrollTop = itemElement.offsetTop;\n      }\n    }\n  };\n\n  const handleListboxKeyDown = e => {\n    const key = e.key;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        const newFocusedItemIndexAfterArrowUp =\n          focusedItemIndex - 1 >= 0 ? focusedItemIndex - 1 : items.length - 1;\n        setFocusedItemIndex(newFocusedItemIndexAfterArrowUp);\n        scrollItemIntoView(newFocusedItemIndexAfterArrowUp);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        const newFocusedItemIndexAfterArrowDown =\n          focusedItemIndex + 1 <= items.length - 1 ? focusedItemIndex + 1 : 0;\n        setFocusedItemIndex(newFocusedItemIndexAfterArrowDown);\n        scrollItemIntoView(newFocusedItemIndexAfterArrowDown);\n        break;\n      case 'Home':\n        setFocusedItemIndex(0);\n        break;\n      case 'End':\n        setFocusedItemIndex(items.length - 1);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        setSelectedItem(items[focusedItemIndex]);\n        setIsOpen(false);\n        triggerButtonRef.current.focus();\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setFocusedItemIndex(\n          findIndexOfItem(selectedItem) > -1 ? findIndexOfItem(selectedItem) : 0\n        );\n        triggerButtonRef.current.focus();\n        break;\n      default:\n      // do nothing\n    }\n  };\n\n  const handleListboxBlur = () => {\n    setIsOpen(false);\n    triggerButtonRef.current.focus();\n  };\n\n  return (\n    <ul\n      className=\"optionsList\"\n      tabIndex=\"-1\"\n      role=\"listbox\"\n      ref={listboxRef}\n      aria-labelledby=\"listboxLabel\"\n      aria-activedescendant={items[focusedItemIndex].id}\n      onKeyDown={handleListboxKeyDown}\n      onBlur={handleListboxBlur}\n    >\n      {items.map((item, index) => (\n        <li\n          id={item.id}\n          key={item.id}\n          role=\"option\"\n          onClick={e => handleItemClick(e, item)}\n          aria-selected={selectedItem.id === item.id}\n          className={index === focusedItemIndex ? 'focused' : ''}\n        >\n          {item.label}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { ListboxOptions } from './ListboxOptions';\nimport './Listbox.css';\n\nexport const Listbox = ({ items, label }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({});\n  const triggerButtonRef = useRef(null);\n\n  const handleTriggerButtonClick = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  const handleTriggerButtonKeyDown = e => {\n    const key = e.key;\n\n    switch (key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n        setIsOpen(true);\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        break;\n      default:\n      // do nothing\n    }\n  };\n\n  return (\n    <div>\n      <span id=\"listboxLabel\">{label}:</span>\n      <div id=\"listboxWrapper\">\n        <div className=\"listboxContainer\">\n          <button\n            aria-haspopup=\"listbox\"\n            aria-labelledby=\"listboxLabel triggerButton\"\n            aria-expanded={isOpen}\n            id=\"triggerButton\"\n            ref={triggerButtonRef}\n            onClick={handleTriggerButtonClick}\n            onKeyDown={handleTriggerButtonKeyDown}\n          >\n            {selectedItem.label || label}\n          </button>\n          {isOpen && (\n            <ListboxOptions\n              items={items}\n              selectedItem={selectedItem}\n              setSelectedItem={setSelectedItem}\n              setIsOpen={setIsOpen}\n              triggerButtonRef={triggerButtonRef}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Listbox } from './Listbox';\n\nconst items = [\n  { id: 'apple', label: 'Apple' },\n  { id: 'banana', label: 'Banana' },\n  { id: 'blackberry', label: 'Blackberry' },\n  { id: 'blueberry', label: 'Blueberry' },\n  { id: 'cranberry', label: 'Cranberry' },\n  { id: 'kiwi', label: 'Kiwi' },\n  { id: 'mango', label: 'Mango' },\n  { id: 'orange', label: 'Orange' },\n  { id: 'pear', label: 'Pear' },\n  { id: 'pineapple', label: 'Pineapple' },\n  { id: 'raspberry', label: 'Raspberry' },\n  { id: 'strawberry', label: 'Strawberry' },\n  { id: 'watermelon', label: 'Watermelon' },\n];\n\nexport const ListboxExample = () => (\n  <>\n    <h2>Finished Result</h2>\n    <div className=\"listboxExampleArea\">\n      <Listbox items={items} label=\"Choose a fruit\" />\n    </div>\n  </>\n);\n","import React from 'react';\n\nexport const ListboxOptions = ({ items }) => {\n  const handleItemClick = (e, item) => {};\n\n  const handleListboxKeyDown = e => {};\n\n  const handleListboxBlur = () => {};\n\n  return (\n    <ul\n      className=\"optionsList\"\n      onKeyDown={handleListboxKeyDown}\n      onBlur={handleListboxBlur}\n    >\n      {items.map(item => (\n        <li id={item.id} key={item.id} onClick={e => handleItemClick(e, item)}>\n          {item.label}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { ListboxOptions } from './ListboxOptions';\nimport './Listbox.css';\n\nexport const Listbox = ({ items, label }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleTriggerButtonClick = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  const handleTriggerButtonKeyDown = e => {};\n\n  return (\n    <div>\n      <span id=\"listboxLabelStartingPoint\">{label}:</span>\n      <div id=\"listboxWrapperStartingPoint\">\n        <div className=\"listboxContainer\">\n          <button\n            id=\"triggerButtonStartingPoint\"\n            onClick={handleTriggerButtonClick}\n            onKeyDown={handleTriggerButtonKeyDown}\n          >\n            {label}\n          </button>\n          {isOpen && <ListboxOptions items={items} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Listbox } from './Listbox';\n\nconst items = [\n  { id: 'apple', label: 'Apple' },\n  { id: 'banana', label: 'Banana' },\n  { id: 'blackberry', label: 'Blackberry' },\n  { id: 'blueberry', label: 'Blueberry' },\n  { id: 'cranberry', label: 'Cranberry' },\n  { id: 'kiwi', label: 'Kiwi' },\n  { id: 'mango', label: 'Mango' },\n  { id: 'orange', label: 'Orange' },\n  { id: 'pear', label: 'Pear' },\n  { id: 'pineapple', label: 'Pineapple' },\n  { id: 'raspberry', label: 'Raspberry' },\n  { id: 'strawberry', label: 'Strawberry' },\n  { id: 'watermelon', label: 'Watermelon' },\n];\n\nexport const ListboxExampleStartingPoint = () => (\n  <>\n    <h2>Starting Point</h2>\n    <div className=\"listboxExampleArea\">\n      <Listbox items={items} label=\"Choose a fruit\" />\n    </div>\n  </>\n);\n","import React from 'react';\nimport './AcceptanceCriteria.css';\n\nexport const AcceptanceCriteria = () => (\n  <div className=\"acceptanceCriteria\">\n    <h2>Acceptance Criteria</h2>\n\n    <h3>Mouse Users</h3>\n    <ol>\n      <li>Clicking the trigger button should show/hide the listbox options</li>\n      <li>Items should be hoverable and selectable with the mouse</li>\n      <li>\n        When an item is clicked, the listbox should be closed and focus should\n        be returned to the trigger button\n      </li>\n      <li>\n        Clicking away from the open listbox should close the listbox and return\n        the focus to the trigger button\n      </li>\n    </ol>\n\n    <h3>Keyboard Users</h3>\n    <ol>\n      <li>\n        Pressing the <code>Enter</code>/<code>Space</code> key on the trigger\n        button should show/hide the listbox options\n      </li>\n      <li>\n        Pressing the <code>Down Arrow</code> or <code>Up Arrow</code> on the\n        trigger button when the listbox is closed should open the listbox\n      </li>\n      <li>Items should be focusable and selectable with the keyboard</li>\n      <ol>\n        <li>\n          <code>Down Arrow</code>: moves focus down by one item\n        </li>\n        <li>\n          <code>Up Arrow</code>: moves focus up by one item\n        </li>\n        <li>\n          <code>Enter</code>: selects the currently focused\n          item and closes the listbox and returns the focus to the trigger\n          button\n        </li>\n        <li>\n          <code>Escape</code>: closes the listbox without making a selection and\n          returns the focus to the trigger button\n        </li>\n        <li>\n          <code>Home</code>: moves focus to the first item\n        </li>\n        <li>\n          <code>End</code>: moves focus to the last item\n        </li>\n      </ol>\n      <li>\n        When focus is moved to an item out of view, listbox should be scrolled\n        so that the item is visible\n      </li>\n    </ol>\n\n    <h3>Screen Reader Users</h3>\n    <ol>\n      <li>\n        Trigger button should have <code>aria-haspopup=\"listbox\"</code>,{' '}\n        <code>aria-labelledby</code>, and <code>aria-expanded</code> attributes\n      </li>\n      <li>\n        <code>ul</code> element should have <code>role=\"listbox\"</code>,{' '}\n        <code>aria-labelledby</code>, and <code>aria-activedescendant</code>{' '}\n        attributes\n      </li>\n      <li>\n        <code>li</code> elements should have <code>role=\"option\"</code> and{' '}\n        <code>aria-selected</code> attributes\n      </li>\n    </ol>\n  </div>\n);\n","import React from 'react';\nimport { ListboxExample } from './ListboxExample';\nimport { ListboxExampleStartingPoint } from './demo-start/ListboxExample';\nimport { AcceptanceCriteria } from './AcceptanceCriteria';\n\nexport const App = () => {\n  return (\n    <main className=\"App\">\n      <h1>Accessible Listbox Components</h1>\n      <ListboxExample />\n      <ListboxExampleStartingPoint />\n      <AcceptanceCriteria />\n    </main>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}